apply plugin: 'java'
apply plugin: 'scala'

repositories {
  mavenCentral()
  jcenter()
}

dependencies {
  compile 'org.scala-lang:scala-library-all:2.12.0'
  compile 'org.scalacheck:scalacheck_2.12:1.13.4'
  compile 'org.scalactic:scalactic_2.12:3.0.1'
  compile 'org.scalatest:scalatest_2.12:3.0.1'
}

tasks.withType(ScalaCompile) {
  configure(scalaCompileOptions.forkOptions) {
    memoryMaximumSize = '1g'
    jvmArgs = ['-XX:MaxPermSize=512m']
  }
  scalaCompileOptions.additionalParameters = ['-target:jvm-1.8',
  '-deprecation', '-encoding', 'UTF-8', 'feature', 'language:existentials',
  '-language:higherKinds', '-language:implicitConversions', '-language:experimental.macros', 
  '-unchecked', '-Ywarn-unused-import', '-Ywarn-nullary-unit', '-Xfatal-warnings', '-Xlint',
  '-Ywarn-dead-code', '-Xfuture' ]
}

jar {
  from configurations.compile.collect { zipTree it }
  manifest.attributes 'Main-Class': 'Draconis.romana.Frame'
}

task run(type: JavaExec, dependsOn: classes) {
  main 'Draconis.romana.Frame'
  classpath sourceSets.main.runtimeClasspath
}

task runJar(type: Exec, dependsOn: jar) { 
  executable 'java'
  args '-jar', "$jar.archivePath"
}
