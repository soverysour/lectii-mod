A lesson is a folder which contains:
    -The folder for tests.
    -The folder for materials.
    -The folder for gallery.
    -The settings file.

A teacher makes/initiates:
    -A new material by specifying its title, level, and contents.
    -A test by specifying its title, level, and title, content and points for each exercise to solve.
    -A gallery file by specifying a title and a file with the help of a FileChooser.
    -Settings for a said module, such as title.
    -A transmission of data by either sending a whole new lesson (module) or specifying bits to add / replace in a pre-existent module.

The available actions for a teacher are:
    -Add test, material, gallery entry;
    -Remove test, material, gallery entry.
    -Change global project settings.
    -Request statistics about the users and their progress.

The types of problems that will exist are :
    -Choose the correct variant. C##V
    -Drag and drop. D##D
    -Complete the empty line. C##E

Let's reiterate:

-I open the application.
-The database of all the users is loaded.
-I get to log in.
-I can also make an account.
-When I make an account, depending on the type, student or teacher, I have different fields to fill.
-Depending on the type of the account, I will have different interaction after I log in.

If I log in with a student account :

    -I get to pick a current module.
    -After I pick a module, all the data related to that module is loaded.
    -I can go over the materials, gallery, complete a test or see my profile.
    -I can also change the running module, for a different lesson.

    -Materials are all put in the materials bar. All the data, sorted, which pops when clicked on.
    -The tests are also there, sorted, with a disginguishing element on, where the case is, to show which has been completed and which has not.
    -The gallery works in the same way as the materials section, sorted and popping.
    -The profile section displays overall statistics and analysis of the data stored, per account.
    -The profile section doesn't go into full detail, even though it keeps it. Just to fit.

-The progress storing is done per account, then per element(gallery, test, material).
-It keeps all sorts of information, either to process it and display locally, or to parse it via network.

If I log in with a teacher account :

    -I can create a new module / bits of a module.
    -I can edit / delete a module / bits of a module, only locally.
    -I get to create and manage classes, where clients have IPs and other details.
    -I get to send data to clients and make requests to the clients, to get data back.
    -I also get to manage the database of local accounts.

-A user of a student client has nothing to do directly with the networking part. The client works, but always obeys.
-A teacher client can only push to and get information from, not manage it locally, such as deleting data from the client, therefore, each client has to manage its own data through a teacher account.
